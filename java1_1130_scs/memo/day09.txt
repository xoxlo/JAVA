day09

0. 복습
배열 : 저장공간의 나열
하나의 타입으로 된 값들만 저장할 수 있는 저장공간의 나열

배열의 선언
1) 배열의 어떤 값이 들어갈 지 알때
	자료형[] 배열명 = {값1, 값2, 값3, ...};

2) 배열에 어떤 값을 넣을지는 모르지만 몇 칸을 만들지는 알 때 선언 방법
	자료형[] 배열명 = new 자료형[칸 수];

3) 배열에 어떤 값을 넣을지도 모르고 몇 칸을 만들지도 모를 때 선언 방법
	자료형[] 배열명 = null;

new : heap 메모리에 할당, 저장공간의 시작주소를 가져온다
null : 주소의 초기값(어떤 주소가 들어갈지 모를 때 사용)


index
배열이 생성할 때 각각의 저장공간에 자동으로 붙여지는 번호
0부터 순차적으로 증가하면서 부여된다.
배열명[인덱스번호]

length
배열을 생성할 때 자동으로 생성되는 저장공간의 수(배열의 길이)
배열의 길이는 한 번 만들어지면 변경할 수 없다

2차원 배열
	: 배열안에 배열

2차원 배열 선언
자료형[][] 배열명 = new 자료형[행][열];
자료형[][] 배열명 = {{값1, 값2, 값3, ...},
		  {값4, 값5, 값6, ...}};


2차원 배열 요소 접근
배열명[행의 인덱스][열의 인덱스]

2차원 배열의 길이
배열명.length : 행의 길이
배열명[행의 인덱스].length : 열의 길이

변수 쓰는 이유 ? 값을 재사용하기 위해서 




1. 메소드
	기능을 저장
	이름뒤에 소괄호()
	단, 키워드 뒤에 소괄호는 메소드가 아니다
	ex) if(조건식){} -> 메소드 아님 !

메소드 선언과 구현(정의)

리턴타입 메소드명(자료형 매개변수명, ...){
	실행할 기능;
	return 리턴값(결과값, 반환값);
}