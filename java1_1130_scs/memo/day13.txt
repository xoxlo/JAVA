day03

0. 복습

static : 정적인
자바의 저장공간이 프로그램이 시작되고 끝날 때까지 유지된다면 => 정적이다
프로그램 실행도중 생겨나거나 사라질 수 있다면 => 동적이다

프로그램 실행 -> 클래스들의 정보를 읽어들인다
static이 붙은 멤버들은 클래스 정보를 잃어오는 시점에 미리 메모리에 올라간다

실행과 동시에 만들어져 있는 static 저장공간은 프로그램이 종료되어야 메모리에서 사라진다

static 키워드
- 멤버 변수(필드)의 종류
	static이 붙은 변수 : static 변수, 클래스 변수, 정적 변수
	static이 안붙은 변수 : 인스턴스 변수

- 멤버 메소드의 종류
	static이 붙은 메소드 : static 메소드, 클래스 메소드, 정적 메소드
	static이 안붙은 메소드 : 인스턴스 메소드, ...

1. static 변수, 메소드는 객체를 생성하지 않아도 사용할 수 있다
	ex) Family.address = "인천";
	    father.address = "인천";

2. static 변수는 객체와 상관없이 하나의 저장공간이므로 모든 객체 공유해서 사용한다
	즉, 모든 객체에서 공통으로 사용되는 변수에 static을 붙이는 것을 고려한다.

3. static메소드는 인스턴스 멤버를 사용할 수 없다. 단, static 메소드 안에서 선언된
	지역변수는 사용가능 !

4. 클래스명.정적멤버

변수의 종류
1. 지역변수 : 메소드 또는 그 안의 중괄호 영역에서 선언된 변수
2. 매개변수(parameter) : 메소드의 소괄호 안에서 선언되는 변수 - 외부로부터 받아온 값을 저장하는 역할
	(지역변수와 마찬가지로 해당 메소드 안에서만 사용 가능하다)
3. 인스턴스 변수 : 클래스의 중괄호 영역에서 선언된 변수
4. 정적 변수, 클래스 변수 : 객체들간의 공유하기 위해서 선언된 변수

실제로 들어가는 값을 인수라고 함
인수를 저장해줄 저장공간이 매개변수

메소드의 매개변수와 인수
1) 인수,인자(argument) : 메소드를 호출하는 쪽에서 사용
2) 매개변수(parameter) : 메소드를 정의하는 쪽에서 사용 


1. 상속
1) 기존에 선언된 클래스의 멤버(생성자는 제외)를 새롭게 만들 클래스에서 사용하고 싶을 때
   상속을 받고 새로운 기능만 추가
2) 부모클래스를 먼저 선언하고 공통멤버를 자식 클래스에게 상속해준다.

상속 문법

class Parents{
	// 필드
	int num1 = 10;
	double num2 = 3.14;
	
	// 메소드
	void method1(){}
}

class Child extends Parents {
	// 필드
	int num3 = 2;

	// 메소드
	void method2(){}
}


Parents : 부모 클래스, 슈퍼 클래스, 기반 클래스, 상위 클래스
Child : 자식 클래스, 서브 클래스, 파생 클래스, 하위 클래스

** 주의사항
자바에서 상속은 단일상속만 지원한다(자식 클래스는 1개의 부모 클래스만을 가진다)

super : 부모의 참조값
	부모의 멤버에 접근할 때 사용한다

super() : 부모 생성자
	자식 클래스의 타입의 객체로 부모 필드에 접근할 수 있다
	자식 클래스의 객체를 만들 때 자식 생성자만 호출하기 때문에,
	자식 멤버들만 메모리에 할당된다고 생각할 수 있다
	그러나 자식의 필드를 초기화 할 때 부모 필드도 초기화 하는 것을 의미한다
	부모 생성자를 호출하는 방법은 super()를 사용하면 된다
	만약, super()를 작성하지 않더라도 컴파일러가 자동으로 작성해준다 !

오버로딩 - 같은 이름의 메소드를 새로 추가, 매개변수의 타입과 갯수는 달라야함
오버라이딩 - 덮어쓴다고 생각, 부모에 있는 메소드의 이름과 리턴타입, 매개변수의 타입과 갯수 같아야함

부모 클래스에서 선언한 메소드를 자식 클래스에서 수정하고자 할 때 부모 클래스와
동일한 이름으로 선언, 재정의