day04


0. 복습
형변환(Type Casting)
자료형을 다른 자료형으로 변환하는 것

형변환의 종류
1) 자동형 변환(Promotion)
- 작은 byte의 값을 큰 byte의 변수에 저장하면 자동으로 형 변환 된다
- 정수 -> 실수
- 정수 + 실수 = 실수
- 문자형(char)값을 정수형 변수에 대입하면 정수로 자동형변환 된다

2) 강제형 변환(Casting)
- (자료형) 값
	ex) (int)12.3456
- 실수 -> 정수
- 큰 byte의 값을 작은 byte의 변수에 저장하려면 강제로 형변환을 해야한다

문자열과 관련된 형변환
- 문자열과 다른 자료형을 연결하면 결과는 항상 문자열이 된다
ex) String age = 20 + "살"; -> "20살"
- 참조자료형은 기본 자료형으로 형변환이 불가능하다
  그런 String 타입은 Integer, Double, Boolean 클래스의 도움을 받아서
  형변환을 할 수 있다

1. 입력메소드
출력 <-> 입력
입력 : 키보드로 입력받는다
입력 메소드 : 사용자로부터 입력을 받을 수 있게 하는 메소드

Scanner 클래스(입력에 관련된 기능을 가진 클래스)

자료형 	변수명	=	값;
Scanner SC	= 	(Scanner클래스를 똑같이 복제한 값);

입력메소드
Scanner 클래스 내부에 입력 메소드가 만들어져 있다
next() : 입력 받은 값을 String타입으로 가져온다
	 입력 값을 띄어쓰기, 엔터로 구분하고 분리한다
	 - 첫번째 문자열을 첫번째 next()에 담고,
	 - 두번째 문자열을 두번째 next()에 담는다

nextLine() : 입력 받은 값을 String 타입으로 돌려준다
	     띄어쓰기를 포함한 한 줄 전체를 입력 받는다

nextInt() : 입력 받은 값을 정수로 int타입으로 돌려준다

nextDouble() : 입력 받은 값을 실수로 double타입으로 돌려준다


2. 연산자

연산자 우선 순위
1. 최우선 연산자 : (), .(~의, ~안에)
2. 단항 연산자 : +(양수), -(음수), !(NOT), ++, --
3. 산술 연산자 : +, -, *, /, %(나머지 연산자)
4. 쉬프트 연산자 : <<, >>
5. 관계 연산자 : <, >, <=, >=, ...
6. 논리 연산자 : &&(&), ||(|), ^
7. 삼항 연산자
8. 대입 연산자(=)
(최단삼쉬관논삼대)

1) 최우선 연산자
System.out.println() -> (), .(~의, ~안에)

2) 단항 연산자
+ (양수)
- (음수)
! (NOT) : !true -> false, !false -> true
증감연산자
	(1) ++ : 1씩 증가한다
		ex) int num = 10;
		    num++; // num = num + 1;
	(2) -- : 1씩 감소한다
		ex) int num = 10;
		    num--; // num = num - 1;
	전위형 : 해당 라인부터 바로 적용(++a)
	후위형 : 다음 라인부터 적용(a++)

3) 산술연산자

+	int, double	덧셈
	String		연결
-	int, double	뺄셈
	String		불가
*	int, double	곱셈
	String		불가
/	int, double / int double	나눗셈
	int / 0		오류 발생, 정수는 0으로 나눌 수 없다
%			나머지 연산자(짝수 홀수 구분)
			ex) 10 % 3 = 1
			    10 % 1 = 0
			    4  % 2 = 0
			    홀수 % 2 = 1

4) 관계 연산자
 a > b : a가 b보다 크니?
 a < b : a가 b보다 작니?
 a >= b : a가 b이상이니?
 a <= b : a가 b이하이니?
 a == b : a랑 b가 같니?
 a != b : a랑 b가 다르니?
		
	관계 연산자의 연산결과는 true, false